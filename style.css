@import url('https://fonts.googleapis.com/css2?family=Kanit:ital,wght@0,300;0,400;0,700;1,300;1,400;1,700&family=Kanit:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap');

body {
    background: linear-gradient(to right, skyblue, dodgerblue);
    background-size: 100% 100%;
    background-attachment: fixed;
    color: white;
    font-family: "Kanit", serif;
    margin: 5rem;
}

button, select, input {
    font-family: "Kanit", serif;
}

a {
    color: dodgerblue;
}

.container {
    display: flex;
    gap: 2rem;
    flex-direction: column;
    position: absolute;
    top: 2rem;
    left: 50%;
    transform: translate(-50%, 0);
    padding-bottom: 2rem;
}

.latex, .result, .control, .latex .settings {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
}

.settings {
    margin-top: 1rem;
    gap: 1rem;
}

.control {
    flex-direction: row;
    gap: 0.5rem;
}

button {
    cursor: pointer;
    background: lightgray;
    color: black;
    border: none;
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 0.4rem;
}

button:hover {
    background: #ccc;
}

button:disabled {
    background: #bbb;
    cursor: not-allowed;
}

textarea {
    border: none;
    outline: none;
    height: 7rem;
    width: 15rem;
}

.latex .latex-input {
    position: relative;
}

.latex .latex-input .latex-control {
    display: flex;
    justify-content: flex-start;
}

.latex .latex-input .latex-control button {
    height: 3rem;
    width: 3rem;
    display: flex;
    justify-content: center;
    align-items: center;
}

.latex .latex-input .latex-control button + button {
    border-left: 2px solid #bbb;
}

.latex .latex-display {
    background: white;
    color: black;
    width: 16rem;
    height: max-content;
    position: relative;
    bottom: 0.5rem;
    border-top: 2px solid #aaa;
}

button:focus, select:focus, input:focus {
    outline: none;
}

input, select {
    border: none;
}

textarea {
    resize: none;
    padding: 0.5rem;
}

textarea:disabled {
    background: white;
    filter: brightness(80%);
    cursor: not-allowed;
}

.result .value {
    font-size: 30px;
    color: transparent;
    background: linear-gradient(to left, white, lightgray);
    -webkit-text-fill-color: transparent;
    background-clip: text;
    -webkit-background-clip: text;
    font-weight: bolder;
}

.tools {
    height: 0;
}

.tools-container {
    display: flex;
    gap: 0.5rem;
}

.side-text h1 {
    position: absolute;
    writing-mode: vertical-lr;
    text-orientation: upright;
    letter-spacing: 0;
    top: 50%;
    height: max-content;
    transform: translateY(-50%);
}

.side-text h1.left {
    left: 0;
}

.side-text h1.right {
    right: 0;
}

span.question {
    cursor: pointer;
}

input#min-graph, input#max-graph {
    width: 2rem;
}

.error {
    visibility: hidden;
    position: absolute;
    left: 0;
    bottom: 0.1rem;
    background: rgb(200, 0, 0);
    height: 2rem;
    padding: 0.2rem 0;
    width: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 0.3rem;
}

.error a, .error button {
    color: white;
    background: transparent;
    border: none;
    text-decoration: none;
    cursor: pointer;
    font-size: inherit;
}

.error a:hover, .error button:hover {
    text-decoration: underline;
}

.result p:has(.approximation):hover {
    color: crimson;
    cursor: pointer;
}

.code {
    font-family: consolas;
    font-size: 15px;
    color: black;
    background: #ccc;
    padding: 1rem;
    border-radius: .5em;
    max-height: 15rem;
    overflow: auto;
}

.lang {
    writing-mode: horizontal-tb;
    cursor: pointer;
}